###############################################################################
# Tijolo configuration file, use with ♥️
#
# If you mess up with this and want to load the defaults, just delete this
# file.
#
# YOU NEED TO RELOAD TIJOLO FOR SOME OF THE SETTINGS TAKE EFFECT.
###############################################################################

# If true, start language server only when opening a file with a language server, otherwise
# scan project and start all possible language servers
# Default: false
lazy_start_language_servers = false

# Enable support for language servers, see [language-servers] section.
# Default: true
language_servers_enabled = true

# Ignore project settings on .editorconfig files
# See https://editorconfig.org/
ignore_editor_config_files = false

# Ignore these directories when loading any project.
# Default: ["node_modules", "tmp/cache"]
ignored_dirs = [".git", "node_modules", "tmp/cache"]

# Set to true to removing trailing white space on save
# Default: true
trim_trailing_white_space_on_save = true

# Tijolo log level, can be: "trace", "debug", "info", "notice", "warn", "error", "fatal", "none"
# Default: "info"
log_level = "info"

[notifications]
# Time notification waits to dissepear in seconds. A value <= zero means no notifications at all
# All notifications can be later read in the output pane by pressing Alt+2.
delay = 10

[editor]
# Editor font size in pt units
# Default: 9
font_size = 9
# Line wrap mode, can be:
# "none"      - Do not wrap lines; just make the text area wider.
# "char"      - Wrap text, breaking lines anywhere the cursor can appear.
# "word"      - Wrap text, breaking lines in between words.
# "word_char" - Wrap text, breaking lines in between words, or if that is not enough, also between graphemes
#
# Default: "word"
wrap_mode = "word"
show_line_numbers = true
# This is not valid for Makefiles
insert_spaces_instead_of_tabs = true
# This is not valid for Makefiles, they always use tab width of 4
tab_width = 2
show_right_margin = true
right_margin_position = 125
highlight_current_line = true
# Background pattern to show, can be: "none", "grid"
# Default: "grid"
background_pattern = "grid"

[terminal]
# If true, terminal views work as a stack (like normal editor views) and can have other views.
# Default: false
shared_view = false

# Use a login shell, this mean the shell will load your /etc/profile, .bash_profile, etc.
login_shell = true

# Any valid strings accepted by gtk_accelerator_parse is a valid shortcut
#
# From GTK docs:
#
# The format looks like "<Control>a" or "<Shift><Alt>F1" or "<Release>z" (the last one is
# for key release).
#
# The parser is fairly liberal and allows lower or upper case, and also abbreviations such
# as "<Ctl>" and "<Ctrl>". For character keys the name is not the symbol, but the lowercase
# name, e.g. one would use "<Ctrl>minus" instead of "<Ctrl>-".
[shortcuts]
close_view       = "<Control>W"
close_all_views  = "<Control><Shift>W"
comment_code     = "<Control>slash"
find             = "<Control>F"
find_by_regexp   = "<Control>R"
find_replace     = "<Control>H"
find_next        = "F3"
find_prev        = "<Shift>F3"
fullscreen       = "F11"
goto_definition  = "F2"
goto_line           = "<Ctrl>G"
new_file            = "<Ctrl>N"
new_terminal        = "<Ctrl>T"
open_file           = "<Ctrl>O"
open_project        = "<Ctrl><Alt>O"
save_view_as        = "<Ctrl><Shift>S"
save_view           = "<Ctrl>S"
# Same as <Ctrl>P then type "g "
show_git_locator = "<Alt>G"
show_locator     = "<Ctrl>P"
sort_lines             = "F9"
show_hide_sidebar      = "<Alt>0"
focus_editor           = "<Alt>1"
show_hide_output_pane  = "<Alt>2"
# Go back/forward on cursor history position
go_back    = "<Shift><Alt>Left"
go_forward = "<Shift><Alt>Right"
# Split view navigation
focus_upper_split = "<Alt>Up"
focus_right_split = "<Alt>Right"
focus_lower_split = "<Alt>Down"
focus_left_split  = "<Alt>Left"
increase_font_size = "<Ctrl>equal"
decrease_font_size = "<Ctrl>minus"
maximize_view = "<Ctrl><Shift>X"
# Terminal view
copy_from_terminal = "<Ctrl><Shift>C"
paste_in_terminal = "<Ctrl><Shift>V"

# Language servers are started using stdio communication, to know all possible language IDs
# list file names /usr/share/gtksourceview-4/language-specs/
#
# To disable a language server set the value to an empty string, just commenting the entry will cause Tijolo to use
# the default values
[language-servers]
# Crystal language server
# https://github.com/elbywan/crystalline
crystal = "crystalline"

# C/C++/Objective C Language server
# https://github.com/MaskRay/ccls
c = "ccls"
cpp = "ccls"
objc = "ccls"
# C/C++ headers
chdr = "ccls"

# Python language server
# https://github.com/palantir/python-language-server
python = "pyls"

# SolarGraph for Ruby, slow but awesome.. but you probably need to change something here if you need to
# run it with bundle exec, rvm do, etc...
ruby = "solargraph stdio"

# Bash language server
# https://github.com/bash-lsp/bash-language-server
sh = "bash-language-server start"

# YAML language server
# https://github.com/redhat-developer/yaml-language-server
yaml = "yaml-language-server --stdio"
